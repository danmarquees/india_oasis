# India Oasis - Nginx Configuration for Production
# Optimized for Hostinger VPS deployment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access Logs
    access_log /var/log/nginx/access.log main;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Buffer Settings
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    client_body_in_file_only clean;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli Compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Security Headers Map
    map $sent_http_content_type $x_frame_options {
        ~*text/html DENY;
        default "";
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # OCSP
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Upstream Backend
    upstream django_backend {
        server web:8000;
        keepalive 32;
    }

    # Main Server Block
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Security headers
        add_header X-Frame-Options $x_frame_options always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

        # Rate limiting
        limit_conn conn_limit_per_ip 20;

        # Root and index
        root /var/www;
        index index.html;

        # Logging
        access_log /var/log/nginx/india_oasis_access.log main;
        error_log /var/log/nginx/india_oasis_error.log warn;

        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";

            # Security for static files
            location ~* \.(js|css)$ {
                add_header Cache-Control "public, immutable";
                expires 1y;
            }

            location ~* \.(ico|jpg|jpeg|png|gif|svg|webp)$ {
                add_header Cache-Control "public, immutable";
                expires 1y;
            }

            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Cache-Control "public, immutable";
                add_header Access-Control-Allow-Origin "*";
                expires 1y;
            }
        }

        # Media files
        location /media/ {
            alias /var/www/media/;
            expires 1M;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";

            # Security for uploads
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Special endpoints with rate limiting
        location /admin/ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        location /payment/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        # Health check endpoint
        location /health/ {
            proxy_pass http://django_backend;
            access_log off;
            include /etc/nginx/proxy_params;
        }

        # Django application
        location / {
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        # Security locations
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Common file requests
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 1y;
        }

        location = /robots.txt {
            access_log off;
            log_not_found off;
            expires 1d;
        }

        location = /sitemap.xml {
            access_log off;
            expires 1d;
        }

        # Block common attack patterns
        location ~* \.(aspx|php|jsp|cgi)$ {
            deny all;
        }

        location ~* /wp- {
            deny all;
        }

        location ~* /(config|\.env|\.git) {
            deny all;
        }
    }

    # HTTPS Server Block (for SSL setup)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        # SSL Configuration (update paths when certificates are obtained)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Include the same configuration as HTTP server
        include /etc/nginx/conf.d/common_server.conf;

        # Additional HTTPS headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Root and index
        root /var/www;
        index index.html;

        # All locations from HTTP server
        include /etc/nginx/conf.d/common_locations.conf;
    }

    # Redirect HTTP to HTTPS (when SSL is configured)
    # Uncomment after SSL setup
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name your-domain.com www.your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }
}
